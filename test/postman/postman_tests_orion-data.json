{
	"info": {
		"_postman_id": "ac9ba5e1-f643-413d-88fe-ec566b3efd93",
		"name": "orion-data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST | error-valid | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"msg\": \"test error\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/error",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"error"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | null-wrongEntity | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item2/public/findbyid/10",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item2",
						"public",
						"findbyid",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | user-newUserInvalidEmail | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"testuser\",\n\t\"password\": \"testpassword\",\n\t\"confirmPassword\": \"testpassword\",\n\t\"email\": \"invalidemail\",\n\t\"firstName\": \"firstName\",\n\t\"lastName\": \"lastName\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | user-newUserPwdMismatch | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"testuser\",\n\t\"password\": \"testpassword\",\n\t\"email\": \"test@test.com\",\n\t\"firstName\": \"firstName\",\n\t\"lastName\": \"lastName\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | user-newUserPwdNotMeetReqs | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"testuser\",\n\t\"password\": \"test\",\n\t\"confirmPassword\": \"test\",\n\t\"email\": \"test@test.com\",\n\t\"firstName\": \"firstName\",\n\t\"lastName\": \"lastName\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | user-newUserGoodReqUser1 | 200/500",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200 || responseCode.code === 500;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"testpassword\",\n\t\"confirmPassword\": \"testpassword\",\n\t\"email\": \"test@test.com\",\n\t\"firstName\": \"gavin\",\n\t\"lastName\": \"belson\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | user-newUserUser1Duplicate | 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 500;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"testpassword\",\n\t\"confirmPassword\": \"testpassword\",\n\t\"email\": \"test@test.com\",\n\t\"firstName\": \"gavin\",\n\t\"lastName\": \"belson\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | user-newUserGoodReqUser2 | 200/500",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200 || responseCode.code === 500;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user2\",\n\t\"password\": \"testpassword\",\n\t\"confirmPassword\": \"testpassword\",\n\t\"email\": \"test@test.com\",\n\t\"firstName\": \"peter\",\n\t\"lastName\": \"gregory\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | user-newUserGoodReqUser3 | 200/500",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200 || responseCode.code === 500;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user3\",\n\t\"password\": \"testpassword\",\n\t\"confirmPassword\": \"testpassword\",\n\t\"email\": \"test@test.com\",\n\t\"firstName\": \"brian\",\n\t\"lastName\": \"griffin\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | token-wrongPassword | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"testpassword123\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/auth/token",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | token-wrongUserName | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"invaliduser\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/auth/token",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | token-goodReqUser1 | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    if(responseCode.code === 200){",
							"        postman.setGlobalVariable(\"authtoken\", json.token);",
							"    }",
							"    tests[\"tokenReturned\"] = !!json.token;",
							"    tests[\"idReturned\"] = !!json.id;",
							"    postman.setGlobalVariable(\"user1id\", json.id);",
							"}catch(e){",
							"    tests[\"tokenreturned\"] = false;",
							"    tests[\"idReturned\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/auth/token",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | token-goodReqUser2 | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    if(responseCode.code === 200){",
							"        postman.setGlobalVariable(\"authtoken2\", json.token);",
							"    }",
							"    tests[\"tokenReturned\"] = !!json.token;",
							"    tests[\"idReturned\"] = !!json.id;",
							"    postman.setGlobalVariable(\"user2id\", json.id);",
							"}catch(e){",
							"    tests[\"tokenreturned\"] = false;",
							"    tests[\"idReturned\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user2\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/auth/token",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | token-goodReqUser3 | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    if(responseCode.code === 200){",
							"        postman.setGlobalVariable(\"authtoken3\", json.token);",
							"    }",
							"    tests[\"tokenReturned\"] = !!json.token;",
							"    tests[\"idReturned\"] = !!json.id;",
							"    postman.setGlobalVariable(\"user3id\", json.id);",
							"}catch(e){",
							"    tests[\"tokenreturned\"] = false;",
							"    tests[\"idReturned\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user3\",\n\t\"password\": \"testpassword\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/auth/token",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | user-findAllPrivateUser1 | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseId\"] = json.items[0].id.toString() === postman.getGlobalVariable(\"user1id\");",
							"    tests[\"responseBody\"] = json.items[0].username.toString() === \"user1\";",
							"}catch(e){",
							"    tests[\"responseId\"] = false;",
							"    tests[\"responseBody\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/user/private/findall/id/0/1",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user",
						"private",
						"findall",
						"id",
						"0",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | user-findByIdPrivateUser1 | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseId\"] = json.items[0].id.toString() === postman.getGlobalVariable(\"user1id\");",
							"    tests[\"responseBody\"] = json.items[0].username.toString() === \"user1\";",
							"}catch(e){",
							"    tests[\"responseId\"] = false;",
							"    tests[\"responseBody\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/user/private/findbyid/{{user1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user",
						"private",
						"findbyid",
						"{{user1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | user-findByIdPrivateUser2 | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseCount\"] = json.count === 0;",
							"}catch(e){",
							"    tests[\"responseCount\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/user/private/findbyid/2",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user",
						"private",
						"findbyid",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | user-user1EditUser2Data | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstName\": \"eddard\",\n\t\"lastName\": \"stark\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user/{{user2id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user",
						"{{user2id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | user-user1EditUser1Data | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstName\": \"catelyn\",\n\t\"lastName\": \"tully\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/user/{{user1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user",
						"{{user1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | user-verifyUser1Update | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseId\"] = json.items[0].id.toString() === postman.getGlobalVariable(\"user1id\");",
							"    tests[\"responseBody\"] = json.items[0].firstname.toString() === \"catelyn\";",
							"}catch(e){",
							"    tests[\"responseId\"] = false;",
							"    tests[\"responseBody\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/user/private/findbyid/{{user1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user",
						"private",
						"findbyid",
						"{{user1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL | user-user1DelUser1 | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/user/{{user1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"user",
						"{{user1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | item-noToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"item123\",\n\t\"date\": \"20171234\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/item",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | item-missingField | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"item123\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/item",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | item-goodReqItem1 | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    postman.setGlobalVariable(\"item1id\", responseBody);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"item1\",\n\t\"date\": \"20170101\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/item",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | item-goodReqItem2 | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"if(responseCode.code === 200){",
							"    postman.setGlobalVariable(\"item2id\", responseBody);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"item2\",\n\t\"date\": \"20170202\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/item",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findByIdPublic | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/public/findbyid/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"public",
						"findbyid",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findByIdPrivateNoToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbyid/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbyid",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findByIdPrivateWrongToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseLength\"] = json.count === 0;",
							"}catch(e){",
							"    tests[\"responseLength\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken2}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbyid/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbyid",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findByIdPrivateInvalidToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer wrongtokenwrongtokenwrongtokenwrongtokenwrongtoken"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbyid/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbyid",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findByIdPrivateGoodToken | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseBody1\"] = json.items[0].id.toString() === postman.getGlobalVariable(\"item1id\");",
							"    tests[\"responseBody2\"] = json.items[0].owner.id.toString() === postman.getGlobalVariable(\"user1id\");",
							"}catch(e){",
							"    tests[\"responseBody1\"] = false;",
							"    tests[\"responseBody2\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbyid/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbyid",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findByConditionPrivateNoToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbycondition/id/0/2/date%3E20170000",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbycondition",
						"id",
						"0",
						"2",
						"date%3E20170000"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findByConditionPrivateGoodTokenByDate | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"totalItems\"] = json.count >= 2;",
							"    tests[\"responseBody1\"] = json.items[0].owner.id.toString() === postman.getGlobalVariable(\"user1id\");",
							"    tests[\"responseBody2\"] = json.items[1].owner.id.toString() === postman.getGlobalVariable(\"user1id\");",
							"}catch(e){",
							"    tests[\"totalItems\"] = false;",
							"    tests[\"responseBody1\"] = false;",
							"    tests[\"responseBody2\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbycondition/id/0/2/date%3E20170000",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbycondition",
						"id",
						"0",
						"2",
						"date%3E20170000"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findByConditionPrivateGoodTokenByName | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"totalItems\"] = json.count >= 1;",
							"    tests[\"responseBody1\"] = json.items[0].name.indexOf(\"item1\") >= 0;",
							"    tests[\"responseBody2\"] = json.items[0].owner.id.toString() === postman.getGlobalVariable(\"user1id\");",
							"}catch(e){",
							"    tests[\"totalItems\"] = false;",
							"    tests[\"responseBody1\"] = false;",
							"    tests[\"responseBody2\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbycondition/id/0/2/name~item1",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbycondition",
						"id",
						"0",
						"2",
						"name~item1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findAllPrivateNotoken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findall/id/0/2",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findall",
						"id",
						"0",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-findAllPrivateGoodToken | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"totalItems\"] = json.count >= 2;",
							"    tests[\"item1owner\"] = json.items[0].owner.id.toString() === postman.getGlobalVariable(\"user1id\");",
							"    tests[\"item2owner\"] = json.items[1].owner.id.toString() === postman.getGlobalVariable(\"user1id\");",
							"}catch(e){",
							"    tests[\"success\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findall/createdat/0/2",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findall",
						"createdat",
						"0",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | item-wrongToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken2}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"item123\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | item-goodToken | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"item123\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-verifyUpdate | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    var insertedId = postman.getGlobalVariable(\"insertedId\");",
							"    tests[\"responseId\"] = json.items[0].name === \"item123\";",
							"}catch(e){",
							"    tests[\"responseId\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbyid/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbyid",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | item-mixedValidFields | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"new item\",\n\t\"name123\": \"new invalid item\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-verifyUpdate2 | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    var insertedId = postman.getGlobalVariable(\"insertedId\");",
							"    tests[\"responseId\"] = json.items[0].name === \"new item\";",
							"}catch(e){",
							"    tests[\"responseId\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbyid/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbyid",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL | item-wrongToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken2}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL | item-item1GoodToken | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL | item-item2GoodToken | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/{{item2id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"{{item2id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL | item-item2DoubleDel | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/{{item2id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"{{item2id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | item-item1VerifyDelete | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"totalItems\"] = json.count == 0;",
							"}catch(e){",
							"    tests[\"totalItems\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/item/private/findbyid/{{item1id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"item",
						"private",
						"findbyid",
						"{{item1id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | message-noToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\": \"test message\",\n\t\"recipientid\": \"{{user2Id}}\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/message",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | message-missingField | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"recipientid\": \"{{user2id}}\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/message",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | message-user1ToUser2Good | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"postman.setGlobalVariable(\"messageId\", responseBody);",
							"tests[\"messageId\"] = !!responseBody;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\": \"test message\",\n\t\"recipientid\": \"{{user2id}}\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/message",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | message-user1GetMsg | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseBody\"] = json.items[0].text === \"test message\";",
							"}catch(e){",
							"    tests[\"responseBody\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/message/public/findbycondition/id/0/1/ownerid={{user1id}}&recipientid={{user2id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message",
						"public",
						"findbycondition",
						"id",
						"0",
						"1",
						"ownerid={{user1id}}&recipientid={{user2id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | message-user2GetMsg | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseBody\"] = json.items[0].text === \"test message\";",
							"}catch(e){",
							"    tests[\"responseBody\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken2}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/message/public/findbycondition/id/0/1/ownerid={{user1id}}&recipientid={{user2id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message",
						"public",
						"findbycondition",
						"id",
						"0",
						"1",
						"ownerid={{user1id}}&recipientid={{user2id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | message-user3GetMsgForbidden | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseBody\"] = json.count === 0;",
							"}catch(e){",
							"    tests[\"responseBody\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken3}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/message/public/findbycondition/id/0/1/ownerid={{user1id}}&recipientid={{user2id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message",
						"public",
						"findbycondition",
						"id",
						"0",
						"1",
						"ownerid={{user1id}}&recipientid={{user2id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | message-user2Flag | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken2}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"flagged\": \"1\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/message/{{messageId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message",
						"{{messageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | message-user1Unflag | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"flagged\": \"0\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/message/{{messageId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message",
						"{{messageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | message-user1EditMsg | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\": \"test message edited\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/message/{{messageId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message",
						"{{messageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT | message-user2EditMsg | 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken2}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\": \"test message edited\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/api/data/message/{{messageId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message",
						"{{messageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL | message-user1DelMsg | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/message/{{messageId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"message",
						"{{messageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | asset-noToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": ""
						}
					]
				},
				"url": {
					"raw": "http://{{host}}/api/data/asset",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"asset"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST | asset-goodToken | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "08c8203c-e276-46d5-8edc-2d25706e0a42",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"assetId\"] = !!json.assetId;",
							"    tests[\"fileName\"] = !!json.fileName;",
							"    postman.setGlobalVariable(\"assetId\", json.assetId);",
							"    postman.setGlobalVariable(\"uploadedFileName\", json.fileName);",
							"}catch(e){",
							"    tests[\"assetId\"] = false;",
							"    tests[\"fileName\"] = false;",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					},
					{
						"key": "Content-Type",
						"value": "multipart/form-data; boundary=--------------------------904960311467316540239199",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "----------------------------904960311467316540239199\r\nContent-Disposition: form-data; name=\"file\"; filename=\"test.txt\"\r\nContent-Type: text/plain\r\n\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n----------------------------904960311467316540239199--\r\n"
				},
				"url": {
					"raw": "http://{{host}}/api/data/asset",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"asset"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | asset-verifyUpload | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a41d5eaf-75b6-4350-a348-51bffd109617",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"responseId\"] = json.items[0].id.toString() === postman.getGlobalVariable(\"assetId\");",
							"    tests[\"uploadedFileName\"] = json.items[0].filename.toString() === postman.getGlobalVariable(\"uploadedFileName\");",
							"}catch(e){",
							"    tests[\"responseId\"] = false;",
							"    tests[\"uploadedFileName\"] = false;",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/asset/private/findbyid/{{assetId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"asset",
						"private",
						"findbyid",
						"{{assetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | asset-verifyFileUploaded | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29a48b6a-5789-43cd-ab6d-1d11984f0901",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/files/{{uploadedFileName}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"files",
						"{{uploadedFileName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL | asset-noToken | 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 401;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/asset/{{assetId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"asset",
						"{{assetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL | asset-goodToken | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/asset/{{assetId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"asset",
						"{{assetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | asset-verifyDelete | 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 200;",
							"try{",
							"    var json = JSON.parse(responseBody);",
							"    tests[\"count\"] = json.count === 0;",
							"}catch(e){",
							"    tests[\"count\"] = false;",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/api/data/asset/private/findbyid/{{assetId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"data",
						"asset",
						"private",
						"findbyid",
						"{{assetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET | asset-verifyFileDeleted | 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29a48b6a-5789-43cd-ab6d-1d11984f0901",
						"exec": [
							"tests[\"statusCode\"] = responseCode.code === 404;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authtoken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/files/{{uploadedFileName}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"files",
						"{{uploadedFileName}}"
					]
				}
			},
			"response": []
		}
	]
}